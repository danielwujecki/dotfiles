#!/usr/bin/env bash
set -euo pipefail

calc_next_index () {
    if [[ ! $# -eq 2 ]] ; then
        echo "calc_next_index requires exactly two arguments. Aborting."
        exit 1
    fi
    INDEX="$(echo "$1" | sed "s/.*$2-\([0-9]\{3\}\).*$/\1+1/;t;d" | bc | sort -n | tail -n1 | xargs printf '%03d')"

    if [[ -n $(echo "$1" | grep "$2-$INDEX") ]] ; then
        echo "$2-$INDEX is an existing archive. Aborting."
        exit 1
    fi
}

if [[ $EUID -ne 0 ]] ; then
    echo "Please run as root"
    exit 1
fi

HOSTNAME="$(cat /etc/hostname)"
if [[ $HOSTNAME = 'ArchX1' ]] ; then
    ARCHIVE_HOST='x1carbon'
elif [[ $HOSTNAME = 'Abacus' ]] ; then
    ARCHIVE_HOST='abacus'
else
    echo "Hostname is neither 'ArchX1' or 'Abacus'. Aborting."
    exit 1
fi

BORG_CMD='borg create -xspC zstd'
BASE_PATH_ROOT='/mnt/borg-bkup-root'
BASE_PATH_USER='/mnt/borg-bkup-user'

# check if backup disk is connected
if [[ ! -h /dev/disk/by-uuid/d2ab6a0d-333d-4726-b461-ca663042bafd ]] ; then
    echo "No Backup disk found. Aborting."
    exit 1
fi

# try to open backup disk
if [[ ! -h /dev/disk/by-uuid/79d55b92-46c5-4dde-90a4-abbe19903c02 ]] ; then
    # check if nothing is mounted at /mnt
    if [[ -n "$(findmnt /mnt)" ]] ; then
        echo "There is something mounted at /mnt. Aborting."
        exit 1
    fi

    echo "Crpytsetup open: bkup0"
    cryptsetup open /dev/disk/by-uuid/d2ab6a0d-333d-4726-b461-ca663042bafd bkup0
    sleep 2 # wait to create the symlinks and stuff

    # check if disk exists
    if [[ ! -h /dev/disk/by-uuid/79d55b92-46c5-4dde-90a4-abbe19903c02 ]] ; then
        echo "Failed opening backup disk. Aborting."
        exit 1
    fi
fi

# try to mount backup disk
BKUPMNT="$(findmnt UUID='79d55b92-46c5-4dde-90a4-abbe19903c02' || true)"
if [[ -z "$(echo "$BKUPMNT" | grep '/mnt')" ]] ; then
    if [[ -n "$(findmnt /mnt)" ]] ; then
        echo "There is something else mounted at /mnt. Aborting."
        exit 1
    fi

    if [[ -n $BKUPMNT ]] ; then
        echo "Backup disk is already mounted somewhere else. Aborting."
        exit 1
    fi

    mount /dev/disk/by-uuid/79d55b92-46c5-4dde-90a4-abbe19903c02 /mnt
    if [[ -z "$(findmnt UUID='79d55b92-46c5-4dde-90a4-abbe19903c02' | grep '/mnt')" ]] ; then
        echo "Failed to mount. Aborting."
        exit 1
    fi
fi

ROOT_REPO_BKUPS="$(borg list $BASE_PATH_ROOT)"
USER_REPO_BKUPS="$(su -c "borg list $BASE_PATH_USER" - daniel)"

calc_next_index "$ROOT_REPO_BKUPS" "$ARCHIVE_HOST-boot"
cd /boot
$BORG_CMD "$BASE_PATH_ROOT::$ARCHIVE_HOST-boot-$INDEX" .

calc_next_index "$ROOT_REPO_BKUPS" "$ARCHIVE_HOST-root"
cd /.btrfs/@
$BORG_CMD "$BASE_PATH_ROOT::$ARCHIVE_HOST-root-$INDEX" .

calc_next_index "$USER_REPO_BKUPS" "$ARCHIVE_HOST-home-daniel"
su -c "cd /.btrfs/@home && $BORG_CMD $BASE_PATH_USER::$ARCHIVE_HOST-home-daniel-$INDEX ." - daniel

borg list "$BASE_PATH_ROOT"
echo ""
su -c "borg list $BASE_PATH_USER" - daniel

while true; do
    read -p 'Try to eject the backup disk? [y/n] ' YN
    case "$YN" in
        [YyJj] ) break;;
        [Nn]   ) exit 0;;
        *      ) echo "Please answer yes or no [y/n].";;
    esac
done

umount /mnt
vgchange -an vgb0
cryptsetup close bkup0
