#!/usr/bin/env bash
set -euo pipefail

TIME="$(date +%H%M)"
DATE="$(date +%d-%m-%y)"
ROOTSNAP_BASE="@-$DATE"
HOMESNAP_BASE="@home-$DATE"
ROOTSNAP="$ROOTSNAP_BASE-$TIME"
HOMESNAP="$HOMESNAP_BASE-$TIME"

QUIET=
FORCE=
S_CREATED=
N_KEEP="5"

help() {
    echo "usage: take-snapshot [--quiet] [--keep=<N>] [--force] [--help]"
    echo "--keep=<N> number of snapshots to keep; default is 7"
    echo "--force: new snapshot will be created, although there already is a snapshot created today"
}

while [[ $# -gt 0 ]] ; do
    case "$1" in
        --keep=*)
            N_KEEP="${1##--keep=}"
            if [[ ! $N_KEEP =~ ^[0-9]+$ ]] ; then
                [[ -n $QUIET ]] || echo "$1 looks not like an integer"
                exit 1
            fi
            shift
            ;;
        --force)
            FORCE="yes"
            shift
            ;;
        --quiet)
            QUIET="yes"
            shift
            ;;
        --help)
            help
            exit 0
            ;;
        *)
            if [[ -z $QUIET ]] ; then
                echo "invalid argument: '$1'"
                help
            fi
            exit 1
            ;;
    esac
done

if [[ $EUID -ne 0 ]] ; then
    echo "Please run as root"
    exit 1
fi

if [[ ! -d /.btrfs/@ ]] ; then
    echo 'root subvolume "@" not existing'
    exit 1
fi

if [[ ! -d /.btrfs/@home ]] ; then
    echo 'home subvolume "@home" not existing'
    exit 1
fi

if [[ ! -d /.snapshots ]] ; then
    echo '/.snapshots directory not existing'
    exit 1
fi

if [[ -d /.snapshots/$ROOTSNAP || -d /.snapshots/$HOMESNAP ]] ; then
    echo "There are already snapshots with names $ROOTSNAP or $HOMESNAP"
    exit 1
fi

ROOT_SUBVOLS="$(find /.snapshots/ -maxdepth 1 -name '@-*' -type d)"
HOME_SUBVOLS="$(find /.snapshots/ -maxdepth 1 -name '@home-*' -type d)"

if [[ -n $FORCE ]] || ! echo "$ROOT_SUBVOLS" | grep -q "$ROOTSNAP_BASE" ; then
    btrfs subvolume snapshot -r "/.btrfs/@" "/.snapshots/$ROOTSNAP"
    echo "$ROOT_SUBVOLS" | head -n "-$((N_KEEP-1))" | xargs -r btrfs subvolume delete
    S_CREATED="yes"
fi
if [[ -n $FORCE ]] || ! echo "$HOME_SUBVOLS" | grep -q "$HOMESNAP_BASE" ; then
    btrfs subvolume snapshot -r "/.btrfs/@home" "/.snapshots/$HOMESNAP"
    echo "$HOME_SUBVOLS" | head -n "-$((N_KEEP-1))" | xargs -r btrfs subvolume delete
    S_CREATED="yes"
fi

[[ -n $QUIET || -z $S_CREATED ]] || ls -lAh --group-directories-first --color=auto /.snapshots
[[ -n $QUIET || -n $S_CREATED ]] || echo "Already took a snapshot today!"
