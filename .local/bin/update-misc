#!/usr/bin/env bash
set -euo pipefail

RED='\033[0;31m'
WHITE='\033[0m'

if [[ $LOGNAME != "daniel" ]] ; then
    echo "Please run as user daniel"
    exit 1
fi

if [[ ! -x /bin/zsh ]] ; then
    echo -e "\n${RED}zsh not installed.${WHITE}\n"
    exit 1
fi

if [[ -x /usr/bin/nvim ]] ; then
    nvim -c "PlugUpgrade" -c "PlugUpdate" -c "quit" -c "quit"
else
    echo -e "\n${RED}neovim not installed.${WHITE}\n"
fi

if [[ -n ${PYENV_ROOT+x} && -d $PYENV_ROOT/.git ]] ; then
    pushd "$PYENV_ROOT"
    git pull
    popd > /dev/null

    pyenvvirtualenv="$PYENV_ROOT/plugins/pyenv-virtualenv"
    if [[ -d $pyenvvirtualenv/.git ]] ; then
        pushd "$pyenvvirtualenv"
        git pull
        popd > /dev/null
    fi
fi

if [[ -x $HOME/.miniconda3/bin/conda ]] ; then
    zsh -c "eval $($HOME/.miniconda3/bin/conda shell.zsh hook); conda update -y --all"
else
    echo -e "\n${RED}Miniconda not installed.${WHITE}\n"
fi

#if [[ -x /usr/bin/cargo && -x $HOME/.cargo/bin/cargo-install-update ]] ; then
#    cargo install-update -a
#else
#    echo -e "\n${RED}Cargo not installed.${WHITE}\n"
#fi

if [[ -x $HOME/.emacs.d/bin/doom ]] ; then
    pushd "$HOME/.emacs.d/"
    git pull --rebase
    doom clean
    doom sync -u
    popd > /dev/null
else
    echo -e "\n${RED}Doom emacs not installed.${WHITE}\n"
fi

if [[ -x /usr/bin/flatpak ]] ; then
    flatpak update --user -y
else
    echo -e "\n${RED}Flatpak not installed.${WHITE}\n"
fi

if [[ -d $HOME/.oh-my-zsh ]] ; then
    zsh -c "source $HOME/.zshrc && omz update"
else
    echo -e "\n${RED}Oh-my-zsh not installed.${WHITE}\n"
fi
